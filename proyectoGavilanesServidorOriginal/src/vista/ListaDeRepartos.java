/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import conexion.ConexionBD;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Garci
 */
public class ListaDeRepartos extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    ConsultarRepartidoresLLamadas12 repartos;

    public ListaDeRepartos() {
        initComponents();
        visualizarRegistrosClientes();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBuscarRepartidor = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableClientes = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("BITACORA DE REGISTRO DE VENTAS");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("BUSCAR ORDEN POR REPARTIDOR:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 21, -1, -1));

        txtBuscarRepartidor.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtBuscarRepartidor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarRepartidorKeyReleased(evt);
            }
        });
        jPanel1.add(txtBuscarRepartidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 18, 353, -1));

        JTableClientes = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        JTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NUMERO ORDEN", "NOMBRE CLIENTE", "DIRECCION", "TELEFONO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTableClientes.getTableHeader().setReorderingAllowed(false);
        JTableClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTableClientesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(JTableClientes);
        if (JTableClientes.getColumnModel().getColumnCount() > 0) {
            JTableClientes.getColumnModel().getColumn(0).setResizable(false);
            JTableClientes.getColumnModel().getColumn(1).setResizable(false);
            JTableClientes.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 76, 527, 154));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 790, 300));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("BITACORA DE REGISTRO DE VENTAS");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JTableClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTableClientesKeyPressed
        ConexionBD objCBD = new ConexionBD();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {;
            this.setVisible(false);
            objCBD.cerrarConexion();

        }
    }//GEN-LAST:event_JTableClientesKeyPressed

    private void txtBuscarRepartidorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarRepartidorKeyReleased
        String buscar = txtBuscarRepartidor.getText().toUpperCase();

        BusquedaFiltrada(buscar);
    }//GEN-LAST:event_txtBuscarRepartidorKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaDeRepartos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaDeRepartos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaDeRepartos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaDeRepartos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaDeRepartos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTableClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBuscarRepartidor;
    // End of variables declaration//GEN-END:variables

    private void BusquedaFiltrada(String texto) {
        ConexionBD objCBD = new ConexionBD();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID ORDEN");
        modelo.addColumn("CLIENTE");
        modelo.addColumn("DIRECCION");
        modelo.addColumn("TELEFONO");

        JTableClientes.setModel(modelo);
        String[] datos = new String[4];

        objCBD.realizarConexion();
        ArrayList instruccionBD = new ArrayList();
        instruccionBD.add("{call sp_consultarClientes2000(?)}");
        instruccionBD.add(texto);
        ResultSet cdr = objCBD.ejecutarConsulta(instruccionBD);
        try {
            while (cdr.next()) {
                datos[0] = cdr.getString("id_ordenC");
                datos[1] = cdr.getString("nombre_cliente_llamada2");
                datos[2] = cdr.getString("direccion2");
                datos[3] = cdr.getString("tel2");//,
               
                modelo.addRow(datos);
            }
            JTableClientes.setModel(modelo);
            objCBD.cerrarConexion();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No se pudo realizar la consulta" + ex, "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {

            objCBD.cerrarConexion();
        }

    }

    private void visualizarRegistrosClientes() {
        ConexionBD objCBD = new ConexionBD();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID ORDEN");
        modelo.addColumn("CLIENTE");
        modelo.addColumn("DIRECCION");
        modelo.addColumn("TELEFONO");

        JTableClientes.setModel(modelo);
        String[] datos = new String[4];

        objCBD.realizarConexion();
        ArrayList instruccionBD = new ArrayList();
        instruccionBD.add("{call sp_consultarClientesTodos()}");
        ResultSet cdr = objCBD.ejecutarConsulta(instruccionBD);
        try {
            while (cdr.next()) {
                datos[0] = cdr.getString(1);
                datos[1] = cdr.getString(2);
                datos[2] = cdr.getString(3);
                datos[3] = cdr.getString(4);

                modelo.addRow(datos);

            }
            JTableClientes.setModel(modelo);
            objCBD.cerrarConexion();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No se pudo realizar la consulta" + ex, "ERROR", JOptionPane.ERROR_MESSAGE);

        } finally {

            objCBD.cerrarConexion();
        }

    }

}
