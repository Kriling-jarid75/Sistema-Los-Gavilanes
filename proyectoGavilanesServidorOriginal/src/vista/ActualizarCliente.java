
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import conexion.ConexionBD;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import conexion.ConexionBD;

/**
 *
 * @author Garci
 */
public class ActualizarCliente extends javax.swing.JFrame {

    

    boolean m;

    public ActualizarCliente() {
        initComponents();
        visualizarRegistrosClientes();
        this.setLocationRelativeTo(null);
        txtId_Clientes.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaClientes3 = new javax.swing.JTable();
        labelNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblEntreCalle = new javax.swing.JLabel();
        txtCalleDos1 = new javax.swing.JTextField();
        lblReferencia = new javax.swing.JLabel();
        txtReferencias = new javax.swing.JTextField();
        lblCallePrincipal = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        txtCalleUno = new javax.swing.JTextField();
        lblCalleFinal = new javax.swing.JLabel();
        txtId_Clientes = new javax.swing.JTextField();
        txtCalleTres = new javax.swing.JTextField();
        lblLocalidad = new javax.swing.JLabel();
        cmbLocalidad = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("ACTUALIZACIÓN DE CLIENTES"));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setText("BUSQUEDA:");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyReleased(evt);
            }
        });
        jPanel4.add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 770, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/flechas.jpg"))); // NOI18N
        jButton1.setText("ACTUALIZAR CLIENTE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 270, 240, 50));

        TablaClientes3 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        TablaClientes3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDENTIFICADOR", "CLIENTE", "LOCALIDAD", "CALLE1", "CALLE2", "CALLE3", "REFERENCIA", "NÚMERO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TablaClientes3.getTableHeader().setReorderingAllowed(false);
        TablaClientes3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaClientes3MouseClicked(evt);
            }
        });
        TablaClientes3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TablaClientes3KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(TablaClientes3);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 1130, 197));

        labelNombre.setText("NOMBRE DEL CLIENTE:");
        jPanel4.add(labelNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        jPanel4.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 270, 150, -1));

        lblEntreCalle.setText("ENTRE CALLE:");
        jPanel4.add(lblEntreCalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 380, -1, -1));

        txtCalleDos1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCalleDos1KeyTyped(evt);
            }
        });
        jPanel4.add(txtCalleDos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 150, -1));

        lblReferencia.setText("REFERENCIA DEL HOGAR:");
        jPanel4.add(lblReferencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 450, -1, -1));

        txtReferencias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtReferenciasKeyTyped(evt);
            }
        });
        jPanel4.add(txtReferencias, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, 152, -1));

        lblCallePrincipal.setText("CALLE PRINCIPAL:");
        jPanel4.add(lblCallePrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, 20));

        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });
        jPanel4.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 480, 155, -1));

        txtCalleUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCalleUnoActionPerformed(evt);
            }
        });
        txtCalleUno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCalleUnoKeyTyped(evt);
            }
        });
        jPanel4.add(txtCalleUno, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 340, 150, -1));

        lblCalleFinal.setText("Y CALLE:");
        jPanel4.add(lblCalleFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, -1, -1));
        jPanel4.add(txtId_Clientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 20, -1));

        txtCalleTres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCalleTresKeyTyped(evt);
            }
        });
        jPanel4.add(txtCalleTres, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 410, 150, -1));

        lblLocalidad.setText("LOCALIDAD:");
        jPanel4.add(lblLocalidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, -1, -1));

        cmbLocalidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        jPanel4.add(cmbLocalidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 150, -1));

        jLabel9.setText("NÚMERO DE TELÉFONO:");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 480, -1, 20));

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exit4.jpg"))); // NOI18N
        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel4.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 330, 240, 50));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        jButton2.setText("ELIMINAR CLIENTE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 400, 240, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("ACTUALIZAR CLIENTES");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed

    }//GEN-LAST:event_txtBusquedaActionPerformed

    private void txtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyReleased

        String buscar = txtBusqueda.getText().toUpperCase();

        BusquedaFiltrada(buscar);
    }//GEN-LAST:event_txtBusquedaKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        metodoActualizarCliente();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TablaClientes3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaClientes3MouseClicked
        int seleccionar = TablaClientes3.rowAtPoint(evt.getPoint());
        txtId_Clientes.setText(String.valueOf(TablaClientes3.getValueAt(seleccionar, 0)));
        txtNombre.setText(String.valueOf(TablaClientes3.getValueAt(seleccionar, 1)));
        cmbLocalidad.setSelectedItem(String.valueOf(TablaClientes3.getValueAt(seleccionar, 2)));
        txtCalleUno.setText(String.valueOf(TablaClientes3.getValueAt(seleccionar, 3)));
        txtCalleDos1.setText(String.valueOf(TablaClientes3.getValueAt(seleccionar, 4)));
        txtCalleTres.setText(String.valueOf(TablaClientes3.getValueAt(seleccionar, 5)));
        txtReferencias.setText(String.valueOf(TablaClientes3.getValueAt(seleccionar, 6)));
        txtTelefono.setText(String.valueOf(TablaClientes3.getValueAt(seleccionar, 7)));
    }//GEN-LAST:event_TablaClientes3MouseClicked

    private void TablaClientes3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaClientes3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {;
            this.setVisible(false);
        }
    }//GEN-LAST:event_TablaClientes3KeyPressed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        char c = evt.getKeyChar();

        if (Character.isDigit(c)) {

            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingrese solo letras por favor!!");
            txtNombre.setCursor(null);

        } else if ((int) evt.getKeyChar() > 32 && (int) evt.getKeyChar() <= 47
                || (int) evt.getKeyChar() >= 58 && (int) evt.getKeyChar() <= 64
                || (int) evt.getKeyChar() >= 91 && (int) evt.getKeyChar() <= 96
                || (int) evt.getKeyChar() >= 123 && (int) evt.getKeyChar() <= 255) {

            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingrese solo letras por favor!!");
            txtNombre.setCursor(null);

        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtCalleDos1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalleDos1KeyTyped

    }//GEN-LAST:event_txtCalleDos1KeyTyped

    private void txtReferenciasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReferenciasKeyTyped

    }//GEN-LAST:event_txtReferenciasKeyTyped

    private void txtCalleUnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalleUnoKeyTyped

    }//GEN-LAST:event_txtCalleUnoKeyTyped

    private void txtCalleTresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalleTresKeyTyped

    }//GEN-LAST:event_txtCalleTresKeyTyped

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed

    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
        char c = evt.getKeyChar();

        if (Character.isLetter(c)) {

            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingrese solo numeros por favor!!");
            txtTelefono.setCursor(null);

        } else if ((int) evt.getKeyChar() > 32 && (int) evt.getKeyChar() <= 47
                || (int) evt.getKeyChar() >= 58 && (int) evt.getKeyChar() <= 64
                || (int) evt.getKeyChar() >= 91 && (int) evt.getKeyChar() <= 96
                || (int) evt.getKeyChar() >= 123 && (int) evt.getKeyChar() <= 255
                || txtTelefono.getText().length() > 10) {

            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo debe de ingresar 10 numeros ");
            txtTelefono.setCursor(null);

        }
    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void txtCalleUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCalleUnoActionPerformed

    }//GEN-LAST:event_txtCalleUnoActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed

        salirVentana();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       if (TablaClientes3.getSelectedRow() >= 0) {
            eliminarFila();

        } else {
            JOptionPane.showMessageDialog(null, "No Ha Seleccionado Al Cliente Para Eliminar", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActualizarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActualizarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActualizarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActualizarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ActualizarCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaClientes3;
    public javax.swing.JButton btnSalir;
    public static javax.swing.JComboBox<String> cmbLocalidad;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel labelNombre;
    public javax.swing.JLabel lblCalleFinal;
    public javax.swing.JLabel lblCallePrincipal;
    public javax.swing.JLabel lblEntreCalle;
    public javax.swing.JLabel lblLocalidad;
    public javax.swing.JLabel lblReferencia;
    private javax.swing.JTextField txtBusqueda;
    public static javax.swing.JTextField txtCalleDos1;
    public static javax.swing.JTextField txtCalleTres;
    public static javax.swing.JTextField txtCalleUno;
    public static javax.swing.JTextField txtId_Clientes;
    public static javax.swing.JTextField txtNombre;
    public static javax.swing.JTextField txtReferencias;
    public static javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    private void BusquedaFiltrada(String texto) {
       ConexionBD objCBD = new ConexionBD();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("CLIENTE");
        modelo.addColumn("LOCALIDAD");
        modelo.addColumn("CALLE 1");
        modelo.addColumn("CALLE 2 ");
        modelo.addColumn("CALLE 3");
        modelo.addColumn("REFERENCIA");
        modelo.addColumn("NUMERO TEL");
        TablaClientes3.setModel(modelo);
        String[] datos = new String[8];

        objCBD.realizarConexion();
        ArrayList instruccionBD = new ArrayList();
        instruccionBD.add("{call sp_consultarClientesZ(?)}");
        instruccionBD.add(texto);
        ResultSet cdr = objCBD.ejecutarConsulta(instruccionBD);
        try {
            while (cdr.next()) {
                datos[0] = cdr.getString(1);
                datos[1] = cdr.getString(2);
                datos[2] = cdr.getString(3);
                datos[3] = cdr.getString(4);
                datos[4] = cdr.getString(5);
                datos[5] = cdr.getString(6);
                datos[6] = cdr.getString(7);
                datos[7] = cdr.getString(8);
                modelo.addRow(datos);
            }
            TablaClientes3.setModel(modelo);
             objCBD.cerrarConexion();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No se pudo realizar la consulta" + ex, "ERROR", JOptionPane.ERROR_MESSAGE);
        } finally {

            objCBD.cerrarConexion();
        }

    }

    private void visualizarRegistrosClientes() {
       ConexionBD objCBD = new ConexionBD();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("CLIENTE");
        modelo.addColumn("LOCALIDAD");
        modelo.addColumn("CALLE 1");
        modelo.addColumn("CALLE 2 ");
        modelo.addColumn("CALLE 3");
        modelo.addColumn("REFERENCIA");
        modelo.addColumn("NUMERO TEL");

        TablaClientes3.setModel(modelo);
        String[] datos = new String[8];

        objCBD.realizarConexion();
        ArrayList instruccionBD = new ArrayList();
        instruccionBD.add("{call sp_consultarClientesTabla()}");
        ResultSet cdr = objCBD.ejecutarConsulta(instruccionBD);
        try {
            while (cdr.next()) {
                datos[0] = cdr.getString("id_cliente");
                datos[1] = cdr.getString("nombre_cliente");
                datos[2] = cdr.getString("localidad");
                datos[3] = cdr.getString("callePrincipal");
                datos[4] = cdr.getString("calle1");
                datos[5] = cdr.getString("calle2");
                datos[6] = cdr.getString("referencia");
                datos[7] = cdr.getString("numeroTel");

                modelo.addRow(datos);

            }
            TablaClientes3.setModel(modelo);
             objCBD.cerrarConexion();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No se pudo realizar la consulta" + ex, "ERROR", JOptionPane.ERROR_MESSAGE);

        } finally {

            objCBD.cerrarConexion();
        }
        cargarComboLocalidad();

    }

    private void metodoActualizarCliente() {
     ConexionBD objCBD = new ConexionBD();
        if (validarCamposVacios() == true) {
            JOptionPane.showMessageDialog(null, "No Hay Nada Por Actualizar, Primero Seleccione Al Cliente!! :( ", "ADEVERTENCIA", JOptionPane.INFORMATION_MESSAGE);
        } else {

            int r = JOptionPane.showConfirmDialog(null, "¿Estás seguro de Actualizar Este Registro?",
                    "Actualiza", JOptionPane.YES_NO_OPTION);

            if (r == 0) {

                objCBD.realizarConexion();
                ArrayList instruccionBD = new ArrayList();

                instruccionBD.add("{call sp_ActualizarCliente(?,?,?,?,?,?,?,?)}");
                instruccionBD.add(txtId_Clientes.getText());
                instruccionBD.add(txtNombre.getText());
                instruccionBD.add(cmbLocalidad.getSelectedItem());
                instruccionBD.add(txtCalleUno.getText());
                instruccionBD.add(txtCalleDos1.getText());
                instruccionBD.add(txtCalleTres.getText());
                instruccionBD.add(txtReferencias.getText());
                instruccionBD.add(txtTelefono.getText());
                objCBD.ejecutarABC(instruccionBD);
                JOptionPane.showMessageDialog(null, "Cliente Actualizado");
                limpiar();
                visualizarRegistrosClientes();
                objCBD.cerrarConexion();

            }

        }

    }

    private void limpiar() {
        txtId_Clientes.setText(null);
        txtNombre.setText(null);
        cmbLocalidad.setSelectedItem("Seleccionar");
        txtCalleUno.setText(null);
        txtCalleDos1.setText(null);
        txtCalleTres.setText(null);
        txtReferencias.setText(null);
        txtTelefono.setText(null);

    }

    private void salirVentana() {
        ConexionBD objCBD = new ConexionBD();
        this.setVisible(false);
        objCBD.cerrarConexion();
    }

    private void cargarComboLocalidad() {
ConexionBD objCBD = new ConexionBD();
        ArrayList instruccionBD = new ArrayList();
        instruccionBD.add("{call sp_LlenarCBOrdenLocalidades()}");
      
        objCBD.ejecutarConsulta(instruccionBD);
        ResultSet cdr = objCBD.getCdr();
        try {
            while (cdr.next()) {
                this.cmbLocalidad.addItem(cdr.getString("nombreLocalidad"));

            }
             objCBD.cerrarConexion();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "La consulta no se ha podido ejecutar. Razón SQL: " + ex, "EXCEPCIÓN SQL", JOptionPane.ERROR_MESSAGE);
        } finally {

            objCBD.cerrarConexion();
        }
    }

    private boolean validarCamposVacios() {

        m = txtNombre.getText().isEmpty()
                || txtCalleUno.getText().isEmpty()
                || txtCalleDos1.getText().isEmpty()
                || txtCalleTres.getText().isEmpty()
                || txtReferencias.getText().isEmpty()
                || txtTelefono.getText().isEmpty()
                || cmbLocalidad.getSelectedItem().equals("Seleccionar");

        return m;

    }
     private void eliminarFila() {

          ConexionBD objCBD = new ConexionBD();
        DefaultTableModel dtm = (DefaultTableModel) TablaClientes3.getModel();

        int fila = TablaClientes3.getSelectedRow();

        String valor = TablaClientes3.getValueAt(fila, 1).toString();

        int r = JOptionPane.showConfirmDialog(null, "¿Estás seguro de Eliminar Este Cliente " + valor,
                "Eliminar", JOptionPane.YES_NO_OPTION);

        if (r == 0) {

            ArrayList instruccionBD = new ArrayList();
            instruccionBD.add("{CALL sp_dele_customer(?)}");
            instruccionBD.add(valor);

            objCBD.ejecutarABC(instruccionBD);
            JOptionPane.showMessageDialog(null, "El Cliente " + valor + " Fue Eliminado");
            dtm.removeRow(TablaClientes3.getSelectedRow());
            limpiar();
            objCBD.cerrarConexion();
        }

    }
}
