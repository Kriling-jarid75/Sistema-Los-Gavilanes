/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPTable;
import conexion.ConexionBD;
import java.awt.Desktop;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Garci
 */
public class VistaHorario extends javax.swing.JInternalFrame {

    int id_horario, id_empleado;
    String nombreE;
    String genero;
    String horaE;
    String horaS;

    public int getId_horario() {
        return id_horario;
    }

    public void setId_horario(int id_horario) {
        this.id_horario = id_horario;
    }

    public int getId_empleado() {
        return id_empleado;
    }

    public void setId_empleado(int id_empleado) {
        this.id_empleado = id_empleado;
    }

    public String getNombreE() {
        return nombreE;
    }

    public void setNombreE(String nombreE) {
        this.nombreE = nombreE;
    }

    public String getGenero() {
        return genero;
    }

    public void setGenero(String genero) {
        this.genero = genero;
    }

    public String getHoraE() {
        return horaE;
    }

    public void setHoraE(String horaE) {
        this.horaE = horaE;
    }

    public String getHoraS() {
        return horaS;
    }

    public void setHoraS(String horaS) {
        this.horaS = horaS;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    public void setjScrollPane1(JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    public JTable getTableHorario() {
        return tableHorario;
    }

    public void setTableHorario(JTable tableHorario) {
        this.tableHorario = tableHorario;
    }

    public VistaHorario() {
        initComponents();
        visualizarRegistros();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableHorario = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnhorario = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("VISTA HORARIO");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("HORARIOS DE EMPLEADO"));

        tableHorario = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tableHorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID HORARIO", "ID EMPLEAD", "NOMBRE EMPLEADO", "GENERO", "HORARIO SABADO", "HORA DE DOMINGO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableHorario.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableHorario);
        if (tableHorario.getColumnModel().getColumnCount() > 0) {
            tableHorario.getColumnModel().getColumn(0).setResizable(false);
            tableHorario.getColumnModel().getColumn(1).setResizable(false);
            tableHorario.getColumnModel().getColumn(2).setResizable(false);
            tableHorario.getColumnModel().getColumn(3).setResizable(false);
            tableHorario.getColumnModel().getColumn(4).setResizable(false);
            tableHorario.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel1.setText("CONSULTA DE HORARIOS DE LOS EMPLEADOS");

        btnhorario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pdf.png"))); // NOI18N
        btnhorario.setText("IMPRIMIR HORARIO");
        btnhorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhorarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(299, 299, 299)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(btnhorario, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnhorario, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/horario-del-contrato-de-formacion.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(jLabel2)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnhorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhorarioActionPerformed

        if (tableHorario.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "No Hay Horario Por Imprimir", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            imprimirHorario();
        }


    }//GEN-LAST:event_btnhorarioActionPerformed
    private void visualizarRegistros() {
         ConexionBD objCBD = new ConexionBD();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("IDENTIFICADOR");
        modelo.addColumn("ID EMPLEADO");
        modelo.addColumn("NOMBRE EMPLEADO");
        modelo.addColumn("GENERO");
        modelo.addColumn("HORARIO DE SABADO");
        modelo.addColumn("HORA DE DOMINGO");
        tableHorario.setModel(modelo);
        String[] datos = new String[7];
       
        objCBD.realizarConexion();
        ArrayList instruccionBD = new ArrayList();
        instruccionBD.add("{call sp_consultarHorario()}");
        ResultSet cdr = objCBD.ejecutarConsulta(instruccionBD);
        try {
            while (cdr.next()) {
                datos[0] = cdr.getString(1);
                datos[1] = cdr.getString(2);
                datos[2] = cdr.getString(3);
                datos[3] = cdr.getString(4);
                datos[4] = cdr.getString(5) + "-" + cdr.getString(6);
                datos[5] = cdr.getString(7) + "-" + cdr.getString(8);

                modelo.addRow(datos);
            }
            tableHorario.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No se pudo realizar la consulta" + ex, "ERROR", JOptionPane.ERROR_MESSAGE);

       }finally {

            objCBD.cerrarConexion();
        }
    }

    private int i;
    String ruta;

    private static final com.itextpdf.text.Font chapterFont = FontFactory.getFont(FontFactory.COURIER_BOLD, 10, Font.BOLD, BaseColor.BLUE);//LA LIBRERIA DE PUNETE ESPECIFICO                                                                              
    private static final com.itextpdf.text.Font paragraphFont = FontFactory.getFont(FontFactory.HELVETICA, 10, Font.ITALIC, BaseColor.BLUE);//AQUI TODO EL TEXTO QUEDA EN ROJO 

    private void imprimirHorario() {

        try {

            Rectangle pageSize = new Rectangle(200f, 200f);
            Document docu = new Document(pageSize);

            Document documento = new Document(PageSize.A6);

            String opcion = JOptionPane.showInputDialog(null, "Escriba el nombre para el archivo");

            if (opcion == null) {
                JOptionPane.showMessageDialog(null, "De acuerdo :) ");
            } else {

                ruta = System.getProperty("user.home") + ("/Desktop/PDF-GAVILANES/HORARIOS/" + opcion + ".pdf");
                File path = new File(ruta);
                if (!path.exists()) {

                    PdfWriter.getInstance(documento, new FileOutputStream(ruta));
                    JOptionPane.showMessageDialog(null, "Reporte de horarios creado");
                } else {

                    String nom = opcion + (++i);
                    JOptionPane.showMessageDialog(null, "Ya  existe el docuemento, se agrega indice");
                    ruta = System.getProperty("user.home") + ("/Desktop/PDF-GAVILANES/HORARIOS/" + nom + ".pdf");
                    PdfWriter.getInstance(documento, new FileOutputStream(ruta));

                }

                documento.open();

                Paragraph tituloN = new Paragraph();
                tituloN.setAlignment(Paragraph.ALIGN_CENTER);
                tituloN.setFont(FontFactory.getFont("Time New Roman", 19, Font.BOLD, BaseColor.BLACK));
                tituloN.add("HORARIO DE LOS EMPLEADOS");
                documento.add(tituloN);
                //tituloN.open();

                int filas2 = tableHorario.getRowCount();
                Paragraph saltoLinea = new Paragraph();

                saltoLinea.add("\n");
                //documento.add(saltoLinea);
                PdfPTable table = new PdfPTable(6);
                table.setWidthPercentage(125);
                //table.set(new float[]{10,10,20,20,10,10});
                table.addCell(new Paragraph("ID", FontFactory.getFont("arial", 5, Font.BOLD, BaseColor.RED)));
                table.addCell(new Paragraph("ID EMPLEADOS", FontFactory.getFont("arial", 5, Font.BOLD, BaseColor.RED)));
                table.addCell(new Paragraph("NOMBRE", FontFactory.getFont("arial", 5, Font.BOLD, BaseColor.RED)));
                table.addCell(new Paragraph("GENERO", FontFactory.getFont("arial", 5, Font.BOLD, BaseColor.RED)));
                table.addCell(new Paragraph("HORARIO DE SÁBADO", FontFactory.getFont("arial", 5, Font.BOLD, BaseColor.RED)));
                table.addCell(new Paragraph("HORARIO DE DOMINGO", FontFactory.getFont("arial", 5, Font.BOLD, BaseColor.RED)));
                for (int i = 0; i < filas2; i++) {
                    table.addCell(new Paragraph(tableHorario.getValueAt(i, 0).toString(), FontFactory.getFont("arial", 6, Font.BOLD, BaseColor.BLACK)));
                    table.addCell(new Paragraph(tableHorario.getValueAt(i, 1).toString(), FontFactory.getFont("arial", 6, Font.BOLD, BaseColor.BLACK)));
                    table.addCell(new Paragraph(tableHorario.getValueAt(i, 2).toString(), FontFactory.getFont("arial", 6, Font.BOLD, BaseColor.BLACK)));
                    table.addCell(new Paragraph(tableHorario.getValueAt(i, 3).toString(), FontFactory.getFont("arial", 6, Font.BOLD, BaseColor.BLACK)));
                    table.addCell(new Paragraph(tableHorario.getValueAt(i, 4).toString(), FontFactory.getFont("arial", 6, Font.BOLD, BaseColor.BLACK)));
                    table.addCell(new Paragraph(tableHorario.getValueAt(i, 5).toString(), FontFactory.getFont("arial", 6, Font.BOLD, BaseColor.BLACK)));

                }
                // com.itextpdf.text.Image = com.itextpdf.text.Image.getInstance("/src/imagenes");
                Image imagen = Image.getInstance("src/imagenes/horario-del-contrato-de-formacion.jpg");
                //imagen.(CENTER_ALIGNMENT);
                imagen.scalePercent(40);
                // imagen.setAlignment(Integer.parseInt(CENTER_ALIGNMENT).toString());
                // documento.add(imagen);

                documento.add(saltoLinea);
                /*documento.add(new Paragraph("ID    ID EMPLEADO    NOMBRE   GÉNERO   ENTRADA   SALIDA ", FontFactory.getFont("arial", 7, Font.BOLD, BaseColor.BLACK)));
            int filas = tableHorario.getRowCount();
            for (int i = 0; i < filas; i++) {
                documento.add(new Paragraph(tableHorario.getValueAt(i, 0).toString() + "     "
                        + tableHorario.getValueAt(i, 1).toString() + "         "
                        + tableHorario.getValueAt(i, 2).toString() + "         "
                        + tableHorario.getValueAt(i, 3).toString() + "         "
                        + tableHorario.getValueAt(i, 4).toString() + "         "
                        + tableHorario.getValueAt(i, 5).toString(), FontFactory.getFont("arial", 7, Font.BOLD, BaseColor.BLACK)));
            }*/

                documento.add(table);
                documento.close();
                path = new File(ruta);
                Desktop.getDesktop().open(path);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(VistaEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(VistaEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VistaEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnhorario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tableHorario;
    // End of variables declaration//GEN-END:variables
}
